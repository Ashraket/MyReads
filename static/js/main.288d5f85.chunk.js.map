{"version":3,"sources":["BooksAPI.js","Components/Book.js","Components/Search.js","Components/BookList.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","books","update","book","shelf","id","method","body","JSON","stringify","search","query","maxResults","Book","props","cover","imageLinks","thumbnail","className","style","width","height","backgroundImage","onChange","o","shelfChange","target","value","currentShelf","disabled","title","authors","Search","state","searchedBooks","updateQuery","spaceQuery","replace","setState","fetchSearchedBooks","length","BooksAPI","error","to","type","placeholder","this","map","searchedBook","forEach","Component","BookList","filter","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.288d5f85.chunk.js","sourcesContent":["const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import React from \"react\";\r\nimport { Component } from \"react/cjs/react.production.min\";\r\n\r\n\r\nfunction Book(props) {\r\n\r\n    \r\n    \r\n        let cover \r\n        if(props.book.imageLinks){\r\n            cover=props.book.imageLinks.thumbnail\r\n        }else{\r\n            cover=''\r\n        }\r\n        return(\r\n            <div className=\"book\">\r\n                <div className=\"book-top\">\r\n                    <div className=\"book-cover\" style={{width:128,height:193,backgroundImage:`url(\"${cover}\")`}}></div>\r\n                    <div className=\"book-shelf-changer\">\r\n                    <select  onChange={(o) => props.shelfChange(props.book, o.target.value)} value={props.currentShelf}>\r\n                                <option value=\"move\" disabled>Move to...</option>\r\n                                <option value=\"currentlyReading\">Currently Reading</option>\r\n                                <option value=\"wantToRead\">Want to Read</option>\r\n                                <option value=\"read\">Read</option>\r\n                                <option value=\"none\">None</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"book-title\">{props.book.title}</div>\r\n                <div className=\"book-authors\">{props.book.authors}</div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    \r\n}\r\nexport default Book;","import * as BooksAPI from '../BooksAPI'\r\nimport {Link} from 'react-router-dom'\r\nimport { Component } from 'react/cjs/react.production.min';\r\nimport Book from './Book';\r\n\r\n\r\nclass Search extends Component{\r\n\r\n  state={\r\n    query:'',\r\n    searchedBooks:[]\r\n  }\r\n  updateQuery=(query)=>{\r\n    let spaceQuery=query.replace(/^\\s+/,'')\r\n    this.setState({query:spaceQuery})\r\n    this.fetchSearchedBooks(query)\r\n  }\r\n  fetchSearchedBooks=(query)=>{\r\n    if (query.length!==0){\r\n      BooksAPI.search(query).then((searchedBooks)=>{\r\n        if(searchedBooks.error){\r\n          this.setState({searchedBooks:[]})\r\n        }else{this.setState({searchedBooks:searchedBooks})}\r\n      })\r\n    }else{this.setState({searchedBooks:[]})}\r\n  }\r\n  render(){\r\n   \r\n\r\n    return(\r\n\r\n      <div className='search-books'>\r\n        <div className='search-books-bar'>\r\n        <Link className=\"close-search\" to=\"/\">\r\n            Close\r\n          </Link>\r\n          <div className='search-books-input-wrapper'>\r\n            <input type= 'text' placeholder=\"Search by title or author\" value={this.state.query} onChange={(o)=>this.updateQuery(o.target.value)}></input>\r\n          </div>\r\n\r\n        </div>\r\n        <div className='search-books-results'>\r\n          <ol className='books-grid'>\r\n            {this.state.searchedBooks.map(searchedBook=>{\r\n              let shelf =\"none\"\r\n              this.props.books.forEach(book=>{\r\n                if(book.id !==searchedBook.id){\r\n                  searchedBook.shelf=\"none\"\r\n                }else{shelf=book.shelf}\r\n              })\r\n              return(\r\n                <li key={searchedBook.id}>\r\n                  <Book book={searchedBook} shelfChange={this.props.shelfChange} currentShelf={shelf}></Book>\r\n                </li>\r\n              )\r\n            })}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;\r\n\r\n\r\n//functional component\r\n\r\n// import { useState } from 'react';\r\n\r\n\r\n// function Search(props){\r\n\r\n//   const [query,setQuery]=useState(\"\");\r\n//   const [searchedBooks,setSearchedBooks]=useState([]);\r\n  \r\n//   const updateQuery=(query)=>{\r\n//     let spaceQuery=query.replace(/^\\s+/,'')\r\n//     setQuery({query:spaceQuery})\r\n//     fetchSearchedBooks(query)\r\n//   }\r\n//   const fetchSearchedBooks=(query)=>{\r\n//     if (query.length!==0){\r\n//       BooksAPI.search(query).then((searchedBooks)=>{\r\n//         if(searchedBooks.error){\r\n//           setSearchedBooks({searchedBooks:[]})\r\n//         }else{setSearchedBooks({searchedBooks:searchedBooks})}\r\n//       })\r\n//     }else{setSearchedBooks({searchedBooks:[]})}\r\n//   }\r\n  \r\n   \r\n\r\n//     return(\r\n\r\n//       <div className='search-books'>\r\n//         <div className='search-books-bar'>\r\n//         <Link className=\"close-search\" to=\"/\">\r\n//             Close\r\n//           </Link>\r\n//           <div className='search-books-input-wrapper'>\r\n//             <input type= 'text' placeholder=\"Search by title or author\" value={query} onChange={(o)=>updateQuery(o.target.value)}></input>\r\n//           </div>\r\n\r\n//         </div>\r\n//         <div className='search-books-results'>\r\n//           <ol className='books-grid'>\r\n//             {searchedBooks.map(searchedBook=>{\r\n//               let shelf =\"none\"\r\n//               props.books.forEach(book=>{\r\n//                 if(book.id !==searchedBook.id){\r\n//                   searchedBook.shelf=\"none\"\r\n//                 }else{shelf=book.shelf}\r\n//               })\r\n//               return(\r\n//                 <li key={searchedBook.id}>\r\n//                   <Book book={searchedBook} shelfChange={props.shelfChange} currentShelf={shelf}></Book>\r\n//                 </li>\r\n//               )\r\n//             })}\r\n//           </ol>\r\n//         </div>\r\n//       </div>\r\n//     )\r\n  \r\n// }\r\n\r\n// export default Search;","import {Link} from 'react-router-dom'\r\nimport { Component } from \"react/cjs/react.production.min\";\r\nimport Book from \"./Book\";\r\n\r\nfunction BookList(props) {\r\n\r\n    \r\n        return(\r\n            <div className=\"list-books\">\r\n                <div className=\"list-books-title\">\r\n                    <h1>My Reads</h1>\r\n                </div>\r\n                <div className=\"list-book-content\">\r\n                    <div>\r\n                        <div className=\"bookshelf\">\r\n                            <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n                            <div className=\"bookshelf-books\">\r\n                                <ol className=\"books-grid\">\r\n                                    {props.books.filter(book=>book.shelf==='currentlyReading')\r\n                                    .map(book=>(<li key={book.id}><Book book={book} shelfChange={props.shelfChange} currentShelf=\"currentlyReading\"></Book></li>))}\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"bookshelf\">\r\n                            <h2 className=\"bookshelf-title\">Want To Read</h2>\r\n                            <div className=\"bookshelf-books\">\r\n                                <ol className=\"books-grid\">\r\n                                    {props.books.filter(book=>book.shelf==='wantToRead')\r\n                                    .map(book=>(<li key={book.id}><Book book={book} shelfChange={props.shelfChange} currentShelf=\"wantToRead\"></Book></li>))}\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"bookshelf\">\r\n                            <h2 className=\"bookshelf-title\">Read</h2>\r\n                            <div className=\"bookshelf-books\">\r\n                                <ol className=\"books-grid\">\r\n                                    {props.books.filter(book=> book.shelf ==='read')\r\n                                    .map(book => (<li key={book.id}><Book book={book} shelfChange={props.shelfChange} currentShelf=\"read\"/></li>))}\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"open-search\">\r\n                    <Link to=\"/search\">seacrh book</Link>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    \r\n\r\n\r\n}\r\n\r\nexport default BookList","import { Component } from \"react/cjs/react.production.min\";\nimport Search from \"./Components/Search\";\nimport BookList from './Components/BookList';\n\nimport \"./App.css\";\nimport * as BooksAPI from './BooksAPI'\nimport {BrowserRouter, Route, Routes} from 'react-router-dom'\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\n\n// function App(props) {\n\n//   const [books,setBooks]=useState([]);\n//   // state={\n//   //   books:[]\n//   // }\n//   // componentDidMount(){\n//   //   BooksAPI.getAll().then((books) => {setBooks({books: books})})\n//   // }\n\n//   useEffect(()=>{\n//     let mounted=true;\n//     BooksAPI.getAll().then(books => {if(mounted){setBooks({books: books})}})\n//     return()=>mounted=false;\n//   })\n//   const shelfChange=(book, shelf)=>{\n//     BooksAPI.update(book,shelf)\n//     BooksAPI.getAll().then((books)=>{setBooks({books:books})})\n\n//   }\n\n  \n//     return(\n//       <div className=\"app\">\n//         <BrowserRouter>\n//         <Routes>\n//         <Route exact path=\"/\" element={<BookList  books={books} shelfChange={shelfChange}/>}\n//         />\n//       <Route exact path=\"/search\" element={ <Search shelfChange={shelfChange} books={books}></Search> }/>\n//         </Routes>\n//       </BrowserRouter>\n      \n//       </div>\n//     )\n  \n// }\n\n// export default App;\n\nclass App extends Component{\n\n  state={\n    books:[]\n  }\n  componentDidMount(){\n    BooksAPI.getAll().then((books) => {this.setState({books: books})})\n  }\n  shelfChange=(book, shelf)=>{\n    BooksAPI.update(book,shelf)\n    BooksAPI.getAll().then((books)=>{this.setState({books:books})})\n\n  }\n\n  render(){\n    return(\n      <div className=\"app\">\n        <BrowserRouter>\n        <Routes>\n        <Route exact path=\"/\" element={<BookList  books={this.state.books} shelfChange={this.shelfChange}/>}\n        />\n      <Route exact path=\"/search\" element={ <Search shelfChange={this.shelfChange} books={this.state.books}></Search> }/>\n        </Routes>\n      </BrowserRouter>\n      \n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}