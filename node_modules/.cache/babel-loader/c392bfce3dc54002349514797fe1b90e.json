{"ast":null,"code":"import _classCallCheck from\"C:/Users/SaWa/Desktop/New folder/myreads/myreads/starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/SaWa/Desktop/New folder/myreads/myreads/starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/SaWa/Desktop/New folder/myreads/myreads/starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/SaWa/Desktop/New folder/myreads/myreads/starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import*as BooksAPI from'../BooksAPI';import{Link}from'react-router-dom';import{Component}from'react/cjs/react.production.min';import Book from'./Book';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Search=/*#__PURE__*/function(_Component){_inherits(Search,_Component);var _super=_createSuper(Search);function Search(){var _this;_classCallCheck(this,Search);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={query:'',searchedBooks:[]};_this.updateQuery=function(query){var spaceQuery=query.replace(/^\\s+/,'');_this.setState({query:spaceQuery});_this.fetchSearchedBooks(query);};_this.fetchSearchedBooks=function(query){if(query.length!==0){BooksAPI.search(query).then(function(searchedBooks){if(searchedBooks.error){_this.setState({searchedBooks:[]});}else{_this.setState({searchedBooks:searchedBooks});}});}else{_this.setState({searchedBooks:[]});}};return _this;}_createClass(Search,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"search-books\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-books-bar\",children:[/*#__PURE__*/_jsx(Link,{className:\"close-search\",to:\"/\",children:\"Close\"}),/*#__PURE__*/_jsx(\"div\",{className:\"search-books-input-wrapper\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search by title or author\",value:this.state.query,onChange:function onChange(o){return _this2.updateQuery(o.target.value);}})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"search-books-results\",children:/*#__PURE__*/_jsx(\"ol\",{className:\"books-grid\",children:this.state.searchedBooks.map(function(searchedBook){var shelf=\"none\";_this2.props.books.forEach(function(book){if(book.id!==searchedBook.id){searchedBook.shelf=\"none\";}else{shelf=book.shelf;}});return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Book,{book:searchedBook,shelfChange:_this2.props.shelfChange,currentShelf:shelf})},searchedBook.id);})})})]});}}]);return Search;}(Component);export default Search;//functional component\n// import { useState } from 'react';\n// function Search(props){\n//   const [query,setQuery]=useState(\"\");\n//   const [searchedBooks,setSearchedBooks]=useState([]);\n//   const updateQuery=(query)=>{\n//     let spaceQuery=query.replace(/^\\s+/,'')\n//     setQuery({query:spaceQuery})\n//     fetchSearchedBooks(query)\n//   }\n//   const fetchSearchedBooks=(query)=>{\n//     if (query.length!==0){\n//       BooksAPI.search(query).then((searchedBooks)=>{\n//         if(searchedBooks.error){\n//           setSearchedBooks({searchedBooks:[]})\n//         }else{setSearchedBooks({searchedBooks:searchedBooks})}\n//       })\n//     }else{setSearchedBooks({searchedBooks:[]})}\n//   }\n//     return(\n//       <div className='search-books'>\n//         <div className='search-books-bar'>\n//         <Link className=\"close-search\" to=\"/\">\n//             Close\n//           </Link>\n//           <div className='search-books-input-wrapper'>\n//             <input type= 'text' placeholder=\"Search by title or author\" value={query} onChange={(o)=>updateQuery(o.target.value)}></input>\n//           </div>\n//         </div>\n//         <div className='search-books-results'>\n//           <ol className='books-grid'>\n//             {searchedBooks.map(searchedBook=>{\n//               let shelf =\"none\"\n//               props.books.forEach(book=>{\n//                 if(book.id !==searchedBook.id){\n//                   searchedBook.shelf=\"none\"\n//                 }else{shelf=book.shelf}\n//               })\n//               return(\n//                 <li key={searchedBook.id}>\n//                   <Book book={searchedBook} shelfChange={props.shelfChange} currentShelf={shelf}></Book>\n//                 </li>\n//               )\n//             })}\n//           </ol>\n//         </div>\n//       </div>\n//     )\n// }\n// export default Search;","map":{"version":3,"sources":["C:/Users/SaWa/Desktop/New folder/myreads/myreads/starter/src/Components/Search.js"],"names":["BooksAPI","Link","Component","Book","Search","state","query","searchedBooks","updateQuery","spaceQuery","replace","setState","fetchSearchedBooks","length","search","then","error","o","target","value","map","searchedBook","shelf","props","books","forEach","book","id","shelfChange"],"mappings":"4qBAAA,MAAO,GAAKA,CAAAA,QAAZ,KAA0B,aAA1B,CACA,OAAQC,IAAR,KAAmB,kBAAnB,CACA,OAASC,SAAT,KAA0B,gCAA1B,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,2FAGMC,CAAAA,M,2TAEJC,K,CAAM,CACJC,KAAK,CAAC,EADF,CAEJC,aAAa,CAAC,EAFV,C,OAINC,W,CAAY,SAACF,KAAD,CAAS,CACnB,GAAIG,CAAAA,UAAU,CAACH,KAAK,CAACI,OAAN,CAAc,MAAd,CAAqB,EAArB,CAAf,CACA,MAAKC,QAAL,CAAc,CAACL,KAAK,CAACG,UAAP,CAAd,EACA,MAAKG,kBAAL,CAAwBN,KAAxB,EACD,C,OACDM,kB,CAAmB,SAACN,KAAD,CAAS,CAC1B,GAAIA,KAAK,CAACO,MAAN,GAAe,CAAnB,CAAqB,CACnBb,QAAQ,CAACc,MAAT,CAAgBR,KAAhB,EAAuBS,IAAvB,CAA4B,SAACR,aAAD,CAAiB,CAC3C,GAAGA,aAAa,CAACS,KAAjB,CAAuB,CACrB,MAAKL,QAAL,CAAc,CAACJ,aAAa,CAAC,EAAf,CAAd,EACD,CAFD,IAEK,CAAC,MAAKI,QAAL,CAAc,CAACJ,aAAa,CAACA,aAAf,CAAd,EAA6C,CACpD,CAJD,EAKD,CAND,IAMK,CAAC,MAAKI,QAAL,CAAc,CAACJ,aAAa,CAAC,EAAf,CAAd,EAAkC,CACzC,C,wDACD,iBAAQ,iBAGN,mBAEE,aAAK,SAAS,CAAC,cAAf,wBACE,aAAK,SAAS,CAAC,kBAAf,wBACA,KAAC,IAAD,EAAM,SAAS,CAAC,cAAhB,CAA+B,EAAE,CAAC,GAAlC,mBADA,cAIE,YAAK,SAAS,CAAC,4BAAf,uBACE,cAAO,IAAI,CAAE,MAAb,CAAoB,WAAW,CAAC,2BAAhC,CAA4D,KAAK,CAAE,KAAKF,KAAL,CAAWC,KAA9E,CAAqF,QAAQ,CAAE,kBAACW,CAAD,QAAK,CAAA,MAAI,CAACT,WAAL,CAAiBS,CAAC,CAACC,MAAF,CAASC,KAA1B,CAAL,EAA/F,EADF,EAJF,GADF,cAUE,YAAK,SAAS,CAAC,sBAAf,uBACE,WAAI,SAAS,CAAC,YAAd,UACG,KAAKd,KAAL,CAAWE,aAAX,CAAyBa,GAAzB,CAA6B,SAAAC,YAAY,CAAE,CAC1C,GAAIC,CAAAA,KAAK,CAAE,MAAX,CACA,MAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBC,OAAjB,CAAyB,SAAAC,IAAI,CAAE,CAC7B,GAAGA,IAAI,CAACC,EAAL,GAAWN,YAAY,CAACM,EAA3B,CAA8B,CAC5BN,YAAY,CAACC,KAAb,CAAmB,MAAnB,CACD,CAFD,IAEK,CAACA,KAAK,CAACI,IAAI,CAACJ,KAAX,CAAiB,CACxB,CAJD,EAKA,mBACE,iCACE,KAAC,IAAD,EAAM,IAAI,CAAED,YAAZ,CAA0B,WAAW,CAAE,MAAI,CAACE,KAAL,CAAWK,WAAlD,CAA+D,YAAY,CAAEN,KAA7E,EADF,EAASD,YAAY,CAACM,EAAtB,CADF,CAKD,CAZA,CADH,EADF,EAVF,GAFF,CA+BD,C,oBAtDkBzB,S,EAyDrB,cAAeE,CAAAA,MAAf,CAGA;AAEA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import * as BooksAPI from '../BooksAPI'\r\nimport {Link} from 'react-router-dom'\r\nimport { Component } from 'react/cjs/react.production.min';\r\nimport Book from './Book';\r\n\r\n\r\nclass Search extends Component{\r\n\r\n  state={\r\n    query:'',\r\n    searchedBooks:[]\r\n  }\r\n  updateQuery=(query)=>{\r\n    let spaceQuery=query.replace(/^\\s+/,'')\r\n    this.setState({query:spaceQuery})\r\n    this.fetchSearchedBooks(query)\r\n  }\r\n  fetchSearchedBooks=(query)=>{\r\n    if (query.length!==0){\r\n      BooksAPI.search(query).then((searchedBooks)=>{\r\n        if(searchedBooks.error){\r\n          this.setState({searchedBooks:[]})\r\n        }else{this.setState({searchedBooks:searchedBooks})}\r\n      })\r\n    }else{this.setState({searchedBooks:[]})}\r\n  }\r\n  render(){\r\n   \r\n\r\n    return(\r\n\r\n      <div className='search-books'>\r\n        <div className='search-books-bar'>\r\n        <Link className=\"close-search\" to=\"/\">\r\n            Close\r\n          </Link>\r\n          <div className='search-books-input-wrapper'>\r\n            <input type= 'text' placeholder=\"Search by title or author\" value={this.state.query} onChange={(o)=>this.updateQuery(o.target.value)}></input>\r\n          </div>\r\n\r\n        </div>\r\n        <div className='search-books-results'>\r\n          <ol className='books-grid'>\r\n            {this.state.searchedBooks.map(searchedBook=>{\r\n              let shelf =\"none\"\r\n              this.props.books.forEach(book=>{\r\n                if(book.id !==searchedBook.id){\r\n                  searchedBook.shelf=\"none\"\r\n                }else{shelf=book.shelf}\r\n              })\r\n              return(\r\n                <li key={searchedBook.id}>\r\n                  <Book book={searchedBook} shelfChange={this.props.shelfChange} currentShelf={shelf}></Book>\r\n                </li>\r\n              )\r\n            })}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;\r\n\r\n\r\n//functional component\r\n\r\n// import { useState } from 'react';\r\n\r\n\r\n// function Search(props){\r\n\r\n//   const [query,setQuery]=useState(\"\");\r\n//   const [searchedBooks,setSearchedBooks]=useState([]);\r\n  \r\n//   const updateQuery=(query)=>{\r\n//     let spaceQuery=query.replace(/^\\s+/,'')\r\n//     setQuery({query:spaceQuery})\r\n//     fetchSearchedBooks(query)\r\n//   }\r\n//   const fetchSearchedBooks=(query)=>{\r\n//     if (query.length!==0){\r\n//       BooksAPI.search(query).then((searchedBooks)=>{\r\n//         if(searchedBooks.error){\r\n//           setSearchedBooks({searchedBooks:[]})\r\n//         }else{setSearchedBooks({searchedBooks:searchedBooks})}\r\n//       })\r\n//     }else{setSearchedBooks({searchedBooks:[]})}\r\n//   }\r\n  \r\n   \r\n\r\n//     return(\r\n\r\n//       <div className='search-books'>\r\n//         <div className='search-books-bar'>\r\n//         <Link className=\"close-search\" to=\"/\">\r\n//             Close\r\n//           </Link>\r\n//           <div className='search-books-input-wrapper'>\r\n//             <input type= 'text' placeholder=\"Search by title or author\" value={query} onChange={(o)=>updateQuery(o.target.value)}></input>\r\n//           </div>\r\n\r\n//         </div>\r\n//         <div className='search-books-results'>\r\n//           <ol className='books-grid'>\r\n//             {searchedBooks.map(searchedBook=>{\r\n//               let shelf =\"none\"\r\n//               props.books.forEach(book=>{\r\n//                 if(book.id !==searchedBook.id){\r\n//                   searchedBook.shelf=\"none\"\r\n//                 }else{shelf=book.shelf}\r\n//               })\r\n//               return(\r\n//                 <li key={searchedBook.id}>\r\n//                   <Book book={searchedBook} shelfChange={props.shelfChange} currentShelf={shelf}></Book>\r\n//                 </li>\r\n//               )\r\n//             })}\r\n//           </ol>\r\n//         </div>\r\n//       </div>\r\n//     )\r\n  \r\n// }\r\n\r\n// export default Search;"]},"metadata":{},"sourceType":"module"}