{"ast":null,"code":"import * as BooksAPI from '../BooksAPI';\nimport { Link } from 'react-router-dom';\nimport { Component } from 'react/cjs/react.production.min';\nimport Book from './Book'; // class Search extends Component{\n//   state={\n//     query:'',\n//     searchedBooks:[]\n//   }\n//   updateQuery=(query)=>{\n//     let spaceQuery=query.replace(/^\\s+/,'')\n//     this.setState({query:spaceQuery})\n//     this.fetchSearchedBooks(query)\n//   }\n//   fetchSearchedBooks=(query)=>{\n//     if (query.length!==0){\n//       BooksAPI.search(query).then((searchedBooks)=>{\n//         if(searchedBooks.error){\n//           this.setState({searchedBooks:[]})\n//         }else{this.setState({searchedBooks:searchedBooks})}\n//       })\n//     }else{this.setState({searchedBooks:[]})}\n//   }\n//   render(){\n//     return(\n//       <div className='search-books'>\n//         <div className='search-books-bar'>\n//         <Link className=\"close-search\" to=\"/\">\n//             Close\n//           </Link>\n//           <div className='search-books-input-wrapper'>\n//             <input type= 'text' placeholder=\"Search by title or author\" value={this.state.query} onChange={(o)=>this.updateQuery(o.target.value)}></input>\n//           </div>\n//         </div>\n//         <div className='search-books-results'>\n//           <ol className='books-grid'>\n//             {this.state.searchedBooks.map(searchedBook=>{\n//               let shelf =\"none\"\n//               this.props.books.forEach(book=>{\n//                 if(book.id !==searchedBook.id){\n//                   searchedBook.shelf=\"none\"\n//                 }else{shelf=book.shelf}\n//               })\n//               return(\n//                 <li key={searchedBook.id}>\n//                   <Book book={searchedBook} shelfChange={this.props.shelfChange} currentShelf={shelf}></Book>\n//                 </li>\n//               )\n//             })}\n//           </ol>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n// export default Search;\n// import { useState } from 'react';\n// function Search(props){\n//   const [query,setQuery]=useState(\"\");\n//   const [searchedBooks,setSearchedBooks]=useState([]);\n//   const updateQuery=(query)=>{\n//     let spaceQuery=query.replace(/^\\s+/,'')\n//     setQuery({query:spaceQuery})\n//     fetchSearchedBooks(query)\n//   }\n//   const fetchSearchedBooks=(query)=>{\n//     if (query.length!==0){\n//       BooksAPI.search(query).then((searchedBooks)=>{\n//         if(searchedBooks.error){\n//           setSearchedBooks({searchedBooks:[]})\n//         }else{setSearchedBooks({searchedBooks:searchedBooks})}\n//       })\n//     }else{setSearchedBooks({searchedBooks:[]})}\n//   }\n//     return(\n//       <div className='search-books'>\n//         <div className='search-books-bar'>\n//         <Link className=\"close-search\" to=\"/\">\n//             Close\n//           </Link>\n//           <div className='search-books-input-wrapper'>\n//             <input type= 'text' placeholder=\"Search by title or author\" value={query} onChange={(o)=>updateQuery(o.target.value)}></input>\n//           </div>\n//         </div>\n//         <div className='search-books-results'>\n//           <ol className='books-grid'>\n//             {searchedBooks.map(searchedBook=>{\n//               let shelf =\"none\"\n//               props.books.forEach(book=>{\n//                 if(book.id !==searchedBook.id){\n//                   searchedBook.shelf=\"none\"\n//                 }else{shelf=book.shelf}\n//               })\n//               return(\n//                 <li key={searchedBook.id}>\n//                   <Book book={searchedBook} shelfChange={props.shelfChange} currentShelf={shelf}></Book>\n//                 </li>\n//               )\n//             })}\n//           </ol>\n//         </div>\n//       </div>\n//     )\n// }\n// export default Search;","map":{"version":3,"sources":["C:/Users/SaWa/Desktop/New folder/myreads/myreads/starter/src/Components/Search.js"],"names":["BooksAPI","Link","Component","Book"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,aAA1B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA","sourcesContent":["import * as BooksAPI from '../BooksAPI'\r\nimport {Link} from 'react-router-dom'\r\nimport { Component } from 'react/cjs/react.production.min';\r\nimport Book from './Book';\r\n\r\n\r\n// class Search extends Component{\r\n\r\n//   state={\r\n//     query:'',\r\n//     searchedBooks:[]\r\n//   }\r\n//   updateQuery=(query)=>{\r\n//     let spaceQuery=query.replace(/^\\s+/,'')\r\n//     this.setState({query:spaceQuery})\r\n//     this.fetchSearchedBooks(query)\r\n//   }\r\n//   fetchSearchedBooks=(query)=>{\r\n//     if (query.length!==0){\r\n//       BooksAPI.search(query).then((searchedBooks)=>{\r\n//         if(searchedBooks.error){\r\n//           this.setState({searchedBooks:[]})\r\n//         }else{this.setState({searchedBooks:searchedBooks})}\r\n//       })\r\n//     }else{this.setState({searchedBooks:[]})}\r\n//   }\r\n//   render(){\r\n   \r\n\r\n//     return(\r\n\r\n//       <div className='search-books'>\r\n//         <div className='search-books-bar'>\r\n//         <Link className=\"close-search\" to=\"/\">\r\n//             Close\r\n//           </Link>\r\n//           <div className='search-books-input-wrapper'>\r\n//             <input type= 'text' placeholder=\"Search by title or author\" value={this.state.query} onChange={(o)=>this.updateQuery(o.target.value)}></input>\r\n//           </div>\r\n\r\n//         </div>\r\n//         <div className='search-books-results'>\r\n//           <ol className='books-grid'>\r\n//             {this.state.searchedBooks.map(searchedBook=>{\r\n//               let shelf =\"none\"\r\n//               this.props.books.forEach(book=>{\r\n//                 if(book.id !==searchedBook.id){\r\n//                   searchedBook.shelf=\"none\"\r\n//                 }else{shelf=book.shelf}\r\n//               })\r\n//               return(\r\n//                 <li key={searchedBook.id}>\r\n//                   <Book book={searchedBook} shelfChange={this.props.shelfChange} currentShelf={shelf}></Book>\r\n//                 </li>\r\n//               )\r\n//             })}\r\n//           </ol>\r\n//         </div>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default Search;\r\n\r\n// import { useState } from 'react';\r\n\r\n\r\n// function Search(props){\r\n\r\n//   const [query,setQuery]=useState(\"\");\r\n//   const [searchedBooks,setSearchedBooks]=useState([]);\r\n  \r\n//   const updateQuery=(query)=>{\r\n//     let spaceQuery=query.replace(/^\\s+/,'')\r\n//     setQuery({query:spaceQuery})\r\n//     fetchSearchedBooks(query)\r\n//   }\r\n//   const fetchSearchedBooks=(query)=>{\r\n//     if (query.length!==0){\r\n//       BooksAPI.search(query).then((searchedBooks)=>{\r\n//         if(searchedBooks.error){\r\n//           setSearchedBooks({searchedBooks:[]})\r\n//         }else{setSearchedBooks({searchedBooks:searchedBooks})}\r\n//       })\r\n//     }else{setSearchedBooks({searchedBooks:[]})}\r\n//   }\r\n  \r\n   \r\n\r\n//     return(\r\n\r\n//       <div className='search-books'>\r\n//         <div className='search-books-bar'>\r\n//         <Link className=\"close-search\" to=\"/\">\r\n//             Close\r\n//           </Link>\r\n//           <div className='search-books-input-wrapper'>\r\n//             <input type= 'text' placeholder=\"Search by title or author\" value={query} onChange={(o)=>updateQuery(o.target.value)}></input>\r\n//           </div>\r\n\r\n//         </div>\r\n//         <div className='search-books-results'>\r\n//           <ol className='books-grid'>\r\n//             {searchedBooks.map(searchedBook=>{\r\n//               let shelf =\"none\"\r\n//               props.books.forEach(book=>{\r\n//                 if(book.id !==searchedBook.id){\r\n//                   searchedBook.shelf=\"none\"\r\n//                 }else{shelf=book.shelf}\r\n//               })\r\n//               return(\r\n//                 <li key={searchedBook.id}>\r\n//                   <Book book={searchedBook} shelfChange={props.shelfChange} currentShelf={shelf}></Book>\r\n//                 </li>\r\n//               )\r\n//             })}\r\n//           </ol>\r\n//         </div>\r\n//       </div>\r\n//     )\r\n  \r\n// }\r\n\r\n// export default Search;"]},"metadata":{},"sourceType":"module"}