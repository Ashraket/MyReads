{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SaWa\\\\Desktop\\\\New folder\\\\myreads\\\\myreads\\\\starter\\\\src\\\\Components\\\\Search.js\";\nimport * as BooksAPI from '../BooksAPI';\nimport { Link } from 'react-router-dom';\nimport { Component } from 'react/cjs/react.production.min';\nimport Book from './Book'; // const SearchBooks=()=>{\n//     const [query,setQuery]=useState(\"\");\n//     const updateQuery=(query)=>{\n//         setQuery=(query)=>{\n//             setQuery(query.trim());\n//         }\n//         return(\n//             <div className=\"search-books\">\n//                 console.log(query);\n//           <div className=\"search-books-bar\">\n//             <a\n//               className=\"close-search\"\n//               onClick={() => setShowSearchpage(!showSearchPage)}\n//             >\n//               Close\n//             </a>\n//             <div className=\"search-books-input-wrapper\">\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Search by title, author, or ISBN\"\n//                  value={query}\n//                  onChange={(event)=>updateQuery(event.target.value)}\n//               />\n//             </div>\n//           </div>\n//           <div className=\"search-books-results\">\n//             <ol className=\"books-grid\"></ol>\n//           </div>\n//         </div>\n//         )\n//     }\n// }\n// export default SearchBooks\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search(props) {\n  state = {\n    query: '',\n    searchedBooks: []\n  };\n\n  const updateQuery = query => {\n    let spaceQuery = query.replace(/^\\s+/, '');\n    setState({\n      query: spaceQuery\n    });\n    fetchSearchedBooks(query);\n  };\n\n  const fetchSearchedBooks = query => {\n    if (query.length !== 0) {\n      BooksAPI.search(query).then(searchedBooks => {\n        if (searchedBooks.error) {\n          setState({\n            searchedBooks: []\n          });\n        } else {\n          setState({\n            searchedBooks: searchedBooks\n          });\n        }\n      });\n    } else {\n      setState({\n        searchedBooks: []\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title or author\",\n          value: state.query,\n          onChange: o => this.updateQuery(o.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: this.state.searchedBooks.map(searchedBook => {\n          let shelf = \"none\";\n          this.props.books.forEach(book => {\n            if (book.id !== searchedBook.id) {\n              searchedBook.shelf = \"none\";\n            } else {\n              shelf = book.shelf;\n            }\n          });\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Book, {\n              book: searchedBook,\n              shelfChange: this.props.shelfChange,\n              currentShelf: shelf\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)\n          }, searchedBook.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/SaWa/Desktop/New folder/myreads/myreads/starter/src/Components/Search.js"],"names":["BooksAPI","Link","Component","Book","Search","props","state","query","searchedBooks","updateQuery","spaceQuery","replace","setState","fetchSearchedBooks","length","search","then","error","o","target","value","map","searchedBook","shelf","books","forEach","book","id","shelfChange"],"mappings":"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","sourcesContent":["import * as BooksAPI from '../BooksAPI'\r\nimport {Link} from 'react-router-dom'\r\nimport { Component } from 'react/cjs/react.production.min';\r\nimport Book from './Book';\r\n\r\n// const SearchBooks=()=>{\r\n\r\n//     const [query,setQuery]=useState(\"\");\r\n//     const updateQuery=(query)=>{\r\n//         setQuery=(query)=>{\r\n//             setQuery(query.trim());\r\n//         }\r\n//         return(\r\n\r\n//             <div className=\"search-books\">\r\n//                 console.log(query);\r\n//           <div className=\"search-books-bar\">\r\n//             <a\r\n//               className=\"close-search\"\r\n//               onClick={() => setShowSearchpage(!showSearchPage)}\r\n//             >\r\n//               Close\r\n//             </a>\r\n//             <div className=\"search-books-input-wrapper\">\r\n//               <input\r\n//                 type=\"text\"\r\n//                 placeholder=\"Search by title, author, or ISBN\"\r\n//                  value={query}\r\n//                  onChange={(event)=>updateQuery(event.target.value)}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"search-books-results\">\r\n//             <ol className=\"books-grid\"></ol>\r\n//           </div>\r\n//         </div>\r\n//         )\r\n//     }\r\n// }\r\n// export default SearchBooks\r\n\r\nfunction Search(props){\r\n\r\n  state={\r\n    query:'',\r\n    searchedBooks:[]\r\n  }\r\n  const updateQuery=(query)=>{\r\n    let spaceQuery=query.replace(/^\\s+/,'')\r\n    setState({query:spaceQuery})\r\n    fetchSearchedBooks(query)\r\n  }\r\n  const fetchSearchedBooks=(query)=>{\r\n    if (query.length!==0){\r\n      BooksAPI.search(query).then((searchedBooks)=>{\r\n        if(searchedBooks.error){\r\n          setState({searchedBooks:[]})\r\n        }else{setState({searchedBooks:searchedBooks})}\r\n      })\r\n    }else{setState({searchedBooks:[]})}\r\n  }\r\n  \r\n   \r\n\r\n    return(\r\n\r\n      <div className='search-books'>\r\n        <div className='search-books-bar'>\r\n        <Link className=\"close-search\" to=\"/\">\r\n            Close\r\n          </Link>\r\n          <div className='search-books-input-wrapper'>\r\n            <input type= 'text' placeholder=\"Search by title or author\" value={state.query} onChange={(o)=>this.updateQuery(o.target.value)}></input>\r\n          </div>\r\n\r\n        </div>\r\n        <div className='search-books-results'>\r\n          <ol className='books-grid'>\r\n            {this.state.searchedBooks.map(searchedBook=>{\r\n              let shelf =\"none\"\r\n              this.props.books.forEach(book=>{\r\n                if(book.id !==searchedBook.id){\r\n                  searchedBook.shelf=\"none\"\r\n                }else{shelf=book.shelf}\r\n              })\r\n              return(\r\n                <li key={searchedBook.id}>\r\n                  <Book book={searchedBook} shelfChange={this.props.shelfChange} currentShelf={shelf}></Book>\r\n                </li>\r\n              )\r\n            })}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    )\r\n  \r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}