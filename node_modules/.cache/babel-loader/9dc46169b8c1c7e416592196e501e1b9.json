{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SaWa\\\\Desktop\\\\New folder\\\\myreads\\\\myreads\\\\starter\\\\src\\\\Components\\\\Search.js\";\nimport React from 'react';\nimport * as BooksAPI from '../BooksAPI';\nimport { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Component } from 'react/cjs/react.production.min';\nimport Book from './Book';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateQuery = query => {\n      let spaceQuery = query.replace(/^\\s+/, '');\n      this.setState({\n        query: spaceQuery\n      });\n      this.fetchSearchedBooks(query);\n    };\n\n    this.fetchSearchedBooks = query => {\n      if (query.length !== 0) {\n        BooksAPI.search(query).then(searchedBooks => {\n          if (searchedBooks.error) {\n            this.setState({\n              searchedBooks: []\n            });\n          } else {\n            this.setState({\n              searchedBooks: searchedBooks\n            });\n          }\n        });\n      } else {\n        this.setState({\n          searchedBooks: searchedBooks\n        });\n      }\n    };\n\n    this.state = {\n      query: '',\n      searchedBooks: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"link\", {\n          to: \"/\",\n          className: \"close-search\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-books-input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by title or author\",\n            value: this.state.query,\n            onChange: o => this.updateQuery(o.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-results\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"books-grid\",\n          children: this.state.searchedBooks.map(searchedBook => {\n            let shelf = \"none\";\n            this.props.books.forEach(book => {\n              if (book.id !== searchedBook.id) {\n                searchedBook.shelf = \"none\";\n              } else {\n                shelf = book.shelf;\n              }\n            });\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Book, {\n                book: searchedBook,\n                shelfChange: this.props.shelfChange,\n                currentShelf: shelf\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this)\n            }, searchedBook.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["C:/Users/SaWa/Desktop/New folder/myreads/myreads/starter/src/Components/Search.js"],"names":["React","BooksAPI","useState","useEffect","Link","Component","Book","Search","constructor","props","updateQuery","query","spaceQuery","replace","setState","fetchSearchedBooks","length","search","then","searchedBooks","error","state","render","o","target","value","map","searchedBook","shelf","books","forEach","book","id","shelfChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as BooksAPI from '../BooksAPI'\r\nimport{useState,useEffect} from \"react\";\r\nimport {Link} from 'react-router-dom'\r\nimport { Component } from 'react/cjs/react.production.min';\r\nimport Book from './Book';\r\n\r\n\r\n\r\nclass Search extends Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  this.state={\r\n    query:'',\r\n    searchedBooks:[]\r\n  }}\r\n  updateQuery=(query)=>{\r\n    let spaceQuery=query.replace(/^\\s+/,'')\r\n    this.setState({query:spaceQuery})\r\n    this.fetchSearchedBooks(query)\r\n  }\r\n  fetchSearchedBooks=(query)=>{\r\n    if (query.length!==0){\r\n      BooksAPI.search(query).then((searchedBooks)=>{\r\n        if(searchedBooks.error){\r\n          this.setState({searchedBooks:[]})\r\n        }else{this.setState({searchedBooks:searchedBooks})}\r\n      })\r\n    }else{this.setState({searchedBooks:searchedBooks})}\r\n  }\r\n  render(){\r\n    return(\r\n      <div className='search-books'>\r\n        <div className='search-books-bar'>\r\n          <link to=\"/\" className='close-search'>Close</link>\r\n          <div className='search-books-input-wrapper'>\r\n            <input type='text' placeholder=\"Search by title or author\" value={this.state.query} onChange={(o)=>this.updateQuery(o.target.value)}></input>\r\n          </div>\r\n\r\n        </div>\r\n        <div className='search-books-results'>\r\n          <ol className='books-grid'>\r\n            {this.state.searchedBooks.map(searchedBook=>{\r\n              let shelf =\"none\"\r\n              this.props.books.forEach(book=>{\r\n                if(book.id !==searchedBook.id){\r\n                  searchedBook.shelf=\"none\"\r\n                }else{shelf=book.shelf}\r\n              })\r\n              return(\r\n                <li key={searchedBook.id}>\r\n                  <Book book={searchedBook} shelfChange={this.props.shelfChange} currentShelf={shelf}></Book>\r\n                </li>\r\n              )\r\n            })}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}